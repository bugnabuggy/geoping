// <auto-generated />
using GeoPing.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GeoPing.Api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180926053217_InitialApplicationMigration")]
    partial class InitialApplicationMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GeoPing.Api.Models.Entities.GeoCatalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(140);

                    b.Property<bool>("isPublic");

                    b.HasKey("Id");

                    b.ToTable("GeoCatalogs");
                });

            modelBuilder.Entity("GeoPing.Api.Models.Entities.GeoPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(240);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("Radius");

                    b.HasKey("Id");

                    b.ToTable("GeoPoints");
                });

            modelBuilder.Entity("GeoPing.Api.Models.Entities.PointCatalog", b =>
                {
                    b.Property<long>("GeoPointId");

                    b.Property<long>("GeoCatalogId");

                    b.HasKey("GeoPointId", "GeoCatalogId");

                    b.HasIndex("GeoCatalogId");

                    b.ToTable("PointCatalogs");
                });

            modelBuilder.Entity("GeoPing.Api.Models.Entities.PointCatalog", b =>
                {
                    b.HasOne("GeoPing.Api.Models.Entities.GeoCatalog", "Catalog")
                        .WithMany("PointCatalogs")
                        .HasForeignKey("GeoCatalogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GeoPing.Api.Models.Entities.GeoPoint", "Point")
                        .WithMany("PointCatalogs")
                        .HasForeignKey("GeoPointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
